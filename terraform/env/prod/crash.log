2015/11/30 13:32:33 [INFO] Terraform version: 0.6.4  49396ba3e03461d9b2bc486e52c45385adb0f094+CHANGES
2015/11/30 13:32:33 [DEBUG] Detected home directory from env var: /Users/shigureonishi
2015/11/30 13:32:33 [DEBUG] Discovered plugin: atlas = /usr/local/bin/terraform-provider-atlas
2015/11/30 13:32:33 [DEBUG] Discovered plugin: aws = /usr/local/bin/terraform-provider-aws
2015/11/30 13:32:33 [DEBUG] Discovered plugin: azure = /usr/local/bin/terraform-provider-azure
2015/11/30 13:32:33 [DEBUG] Discovered plugin: cloudflare = /usr/local/bin/terraform-provider-cloudflare
2015/11/30 13:32:33 [DEBUG] Discovered plugin: cloudstack = /usr/local/bin/terraform-provider-cloudstack
2015/11/30 13:32:33 [DEBUG] Discovered plugin: consul = /usr/local/bin/terraform-provider-consul
2015/11/30 13:32:33 [DEBUG] Discovered plugin: digitalocean = /usr/local/bin/terraform-provider-digitalocean
2015/11/30 13:32:33 [DEBUG] Discovered plugin: dme = /usr/local/bin/terraform-provider-dme
2015/11/30 13:32:33 [DEBUG] Discovered plugin: dnsimple = /usr/local/bin/terraform-provider-dnsimple
2015/11/30 13:32:33 [DEBUG] Discovered plugin: docker = /usr/local/bin/terraform-provider-docker
2015/11/30 13:32:33 [DEBUG] Discovered plugin: google = /usr/local/bin/terraform-provider-google
2015/11/30 13:32:33 [DEBUG] Discovered plugin: heroku = /usr/local/bin/terraform-provider-heroku
2015/11/30 13:32:33 [DEBUG] Discovered plugin: mailgun = /usr/local/bin/terraform-provider-mailgun
2015/11/30 13:32:33 [DEBUG] Discovered plugin: null = /usr/local/bin/terraform-provider-null
2015/11/30 13:32:33 [DEBUG] Discovered plugin: openstack = /usr/local/bin/terraform-provider-openstack
2015/11/30 13:32:33 [DEBUG] Discovered plugin: packet = /usr/local/bin/terraform-provider-packet
2015/11/30 13:32:33 [DEBUG] Discovered plugin: rundeck = /usr/local/bin/terraform-provider-rundeck
2015/11/30 13:32:33 [DEBUG] Discovered plugin: template = /usr/local/bin/terraform-provider-template
2015/11/30 13:32:33 [DEBUG] Discovered plugin: terraform = /usr/local/bin/terraform-provider-terraform
2015/11/30 13:32:33 [DEBUG] Discovered plugin: vsphere = /usr/local/bin/terraform-provider-vsphere
2015/11/30 13:32:33 [DEBUG] Discovered plugin: chef = /usr/local/bin/terraform-provisioner-chef
2015/11/30 13:32:33 [DEBUG] Discovered plugin: file = /usr/local/bin/terraform-provisioner-file
2015/11/30 13:32:33 [DEBUG] Discovered plugin: local-exec = /usr/local/bin/terraform-provisioner-local-exec
2015/11/30 13:32:33 [DEBUG] Discovered plugin: remote-exec = /usr/local/bin/terraform-provisioner-remote-exec
2015/11/30 13:32:33 [DEBUG] Detected home directory from env var: /Users/shigureonishi
2015/11/30 13:32:33 [DEBUG] Attempting to open CLI config file: /Users/shigureonishi/.terraformrc
2015/11/30 13:32:33 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.OrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.AddOutputOrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] Detected home directory from env var: /Users/shigureonishi
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.VertexTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.FlattenTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProxyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.DestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CreateBeforeDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneNoopTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
aws_security_group.softether
  aws_vpc.vpn
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] Starting graph walk: walkInput
2015/11/30 13:32:33 [DEBUG] vertex root.var.developers_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.developers_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.file: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.file: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] Starting plugin: /usr/local/bin/terraform-provisioner-file []string{"/usr/local/bin/terraform-provisioner-file"}
2015/11/30 13:32:33 [DEBUG] Waiting for RPC address for: /usr/local/bin/terraform-provisioner-file
2015/11/30 13:32:33 [DEBUG] vertex root.var.ami_id: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.ami_id: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.chef: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.chef: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.remote-exec: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.remote-exec: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.var.role_cidr_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.role_cidr_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] vertex root.var.key_pair: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.key_pair: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.var.aws_region: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.aws_region: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex provider.aws, got dep: var.aws_region
2015/11/30 13:32:33 [DEBUG] vertex root.var.prefix_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.prefix_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvider
2015/11/30 13:32:33 [DEBUG] Starting plugin: /usr/local/bin/terraform-provider-aws []string{"/usr/local/bin/terraform-provider-aws"}
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: var.prefix_ip
2015/11/30 13:32:33 [DEBUG] vertex root.var.envname: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.envname: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_iam_role.softether, got dep: var.envname
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: var.envname
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.local-exec: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.local-exec: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.var.availability_zone: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.availability_zone: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.availability_zone
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.availability_zone
2015/11/30 13:32:33 [DEBUG] vertex root.var.instance_type: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.instance_type: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] terraform-provisioner-file: 2015/11/30 13:32:33 Plugin address: unix /var/folders/1t/kjwcdhln4jjfzsb9vc6kwy0r0000gn/T/tf-plugin504270726
2015/11/30 13:32:33 [DEBUG] Waiting for RPC address for: /usr/local/bin/terraform-provider-aws
2015/11/30 13:32:33 [DEBUG] Starting plugin: /usr/local/bin/terraform-provisioner-chef []string{"/usr/local/bin/terraform-provisioner-chef"}
2015/11/30 13:32:33 [DEBUG] Waiting for RPC address for: /usr/local/bin/terraform-provisioner-chef
2015/11/30 13:32:33 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:33 Plugin address: unix /var/folders/1t/kjwcdhln4jjfzsb9vc6kwy0r0000gn/T/tf-plugin926747681
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInputProvider
2015/11/30 13:32:33 [DEBUG] terraform-provisioner-chef: 2015/11/30 13:32:33 Plugin address: unix /var/folders/1t/kjwcdhln4jjfzsb9vc6kwy0r0000gn/T/tf-plugin938258250
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_iam_role.softether, got dep: provider.aws
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: provider.aws
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_role.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_role.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_vpc.vpn
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_iam_instance_profile.softether, got dep: aws_iam_role.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group.softether, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group.developer_network, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_internet_gateway.gw, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.developer_network
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.developer_network
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_udp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp443_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp992_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp5555_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_udp500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_udp4500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.developer_network
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.instance_type
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.ami_id
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_iam_instance_profile.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: aws_security_group.developer_network
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: var.developers_ip
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table.softether_server, got dep: aws_internet_gateway.gw
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_subnet.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table.softether_server
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table.softether_server
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_route_table.softether_server
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_subnet.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_route_table.softether_server
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_launch_configuration.softether
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws (close): walking
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws (close): evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCloseProvider
2015/11/30 13:32:33 [DEBUG] Starting plugin: /usr/local/bin/terraform-provisioner-local-exec []string{"/usr/local/bin/terraform-provisioner-local-exec"}
2015/11/30 13:32:33 [DEBUG] Waiting for RPC address for: /usr/local/bin/terraform-provisioner-local-exec
2015/11/30 13:32:33 [DEBUG] terraform-provisioner-local-exec: 2015/11/30 13:32:33 Plugin address: unix /var/folders/1t/kjwcdhln4jjfzsb9vc6kwy0r0000gn/T/tf-plugin246991411
2015/11/30 13:32:33 [DEBUG] Starting plugin: /usr/local/bin/terraform-provisioner-remote-exec []string{"/usr/local/bin/terraform-provisioner-remote-exec"}
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.local-exec
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: var.key_pair
2015/11/30 13:32:33 [DEBUG] Waiting for RPC address for: /usr/local/bin/terraform-provisioner-remote-exec
2015/11/30 13:32:33 [DEBUG] terraform-provisioner-remote-exec: 2015/11/30 13:32:33 Plugin address: unix /var/folders/1t/kjwcdhln4jjfzsb9vc6kwy0r0000gn/T/tf-plugin569261123
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.remote-exec
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provider.aws (close)
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.chef
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.file
2015/11/30 13:32:33 [DEBUG] vertex root.root: walking
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.OrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.AddOutputOrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.VertexTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.FlattenTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProxyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.DestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CreateBeforeDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneNoopTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
aws_security_group.softether
  aws_vpc.vpn
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] Starting graph walk: walkValidate
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.file: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.file: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.var.ami_id: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.ami_id: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.var.aws_region: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.aws_region: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex provider.aws, got dep: var.aws_region
2015/11/30 13:32:33 [DEBUG] vertex root.var.availability_zone: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.availability_zone: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvider
2015/11/30 13:32:33 [DEBUG] vertex root.var.key_pair: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.key_pair: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.var.envname: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.envname: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_iam_role.softether, got dep: var.envname
2015/11/30 13:32:33 [DEBUG] vertex root.var.developers_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.developers_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.chef: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.chef: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.remote-exec: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.remote-exec: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.var.prefix_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.prefix_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: var.prefix_ip
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: var.envname
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.local-exec: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.local-exec: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.var.instance_type: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.instance_type: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.instance_type
2015/11/30 13:32:33 [DEBUG] vertex root.var.role_cidr_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.role_cidr_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.availability_zone
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.availability_zone
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateProvider
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.local-exec
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.file
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.chef
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.remote-exec
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: var.key_pair
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_iam_role.softether, got dep: provider.aws
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: provider.aws
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_role.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_role.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_vpc.vpn
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_iam_instance_profile.softether, got dep: aws_iam_role.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group.developer_network, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group.softether, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_internet_gateway.gw, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: aws_vpc.vpn
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.developer_network
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.developer_network
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_iam_instance_profile.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.ami_id
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: aws_security_group.developer_network
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: var.developers_ip
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_udp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp443_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp5555_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_udp4500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_udp500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp992_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_security_group_rule.softether_tcp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.softether
2015/11/30 13:32:33 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.developer_network
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table.softether_server, got dep: aws_internet_gateway.gw
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_subnet.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table.softether_server
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table.softether_server
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_route_table.softether_server
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_subnet.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_route_table.softether_server
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateCount
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:33 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalValidateResource
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone2
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone1
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_launch_configuration.softether
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:33 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws (close): walking
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws (close): evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalCloseProvider
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provider.aws (close)
2015/11/30 13:32:33 [DEBUG] vertex root.root: walking
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.OrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.AddOutputOrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.VertexTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.FlattenTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.ProxyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.DestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CreateBeforeDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.PruneNoopTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
aws_security_group.softether
  aws_vpc.vpn
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] Starting graph walk: walkRefresh
2015/11/30 13:32:33 [DEBUG] vertex root.var.developers_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.developers_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.var.key_pair: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.key_pair: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: var.key_pair
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.file: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.file: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.chef: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.chef: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.var.aws_region: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.aws_region: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex provider.aws, got dep: var.aws_region
2015/11/30 13:32:33 [DEBUG] vertex root.var.ami_id: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.ami_id: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provider.aws: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvider
2015/11/30 13:32:33 [DEBUG] vertex root.var.instance_type: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.instance_type: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.var.prefix_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.prefix_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: var.prefix_ip
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.local-exec: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.local-exec: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] vertex root.var.availability_zone: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.availability_zone: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex root.var.envname: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.envname: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_iam_role.softether, got dep: var.envname
2015/11/30 13:32:33 [DEBUG] vertex aws_vpc.vpn, got dep: var.envname
2015/11/30 13:32:33 [DEBUG] vertex root.var.role_cidr_ip: walking
2015/11/30 13:32:33 [DEBUG] vertex root.var.role_cidr_ip: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.role_cidr_ip
2015/11/30 13:32:33 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.availability_zone
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.remote-exec: walking
2015/11/30 13:32:33 [DEBUG] vertex root.provisioner.remote-exec: evaluating
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:33 [DEBUG] root: eval: *terraform.EvalConfigProvider
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.file
2015/11/30 13:32:33 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:33 [INFO] Building AWS region structure
2015/11/30 13:32:33 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:33 [INFO] Building AWS auth structure
2015/11/30 13:32:33 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:33 [INFO] Initializing IAM Connection
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.local-exec
2015/11/30 13:32:33 [DEBUG] vertex root, got dep: provisioner.chef
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing DynamoDB connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing ELB connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing S3 connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing SQS connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing SNS connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing RDS Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Kinesis Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing AutoScaling connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing EC2 Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing ECS Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing EFS Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing ElasticSearch Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Route 53 connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Elasticache Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Lambda Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing CloudWatch SDK connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing CloudWatch Logs connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing OpsWorks Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Directory Service connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Glacier connection
2015/11/30 13:32:34 [DEBUG] vertex aws_iam_role.softether, got dep: provider.aws
2015/11/30 13:32:34 [DEBUG] vertex aws_vpc.vpn, got dep: provider.aws
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_role.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_role.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_vpc.vpn
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_iam_role.softether: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_vpc.vpn: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_iam_instance_profile.softether, got dep: aws_iam_role.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_internet_gateway.gw, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group.developer_network, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.role_cidr_ip
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.availability_zone
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group.softether, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.developer_network
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.developer_network
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_iam_instance_profile.softether: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_internet_gateway.gw: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group.developer_network: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_subnet.softether_server_zone1: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group.softether: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_subnet.softether_server_zone2: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table.softether_server, got dep: aws_internet_gateway.gw
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: aws_security_group.developer_network
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: var.developers_ip
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp443_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.instance_type
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.ami_id
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_iam_instance_profile.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.developer_network
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp5555_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp992_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_udp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_udp500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_udp4500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_subnet.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table.softether_server
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table.softether_server
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_route_table.softether_server: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.developer_network_tcp22_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.softether_tcp443_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_launch_configuration.softether: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.softether_tcp5555_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.softether_tcp1194_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.softether_tcp992_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.softether_udp1194_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.softether_udp500_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_security_group_rule.softether_udp4500_ingress: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_route_table.softether_server
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_subnet.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_route_table.softether_server
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_launch_configuration.softether
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_route_table_association.softether_server_zone1: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalRefresh
2015/11/30 13:32:34 [DEBUG] refresh: aws_route_table_association.softether_server_zone2: no state, not refreshing
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws (close): walking
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws (close): evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCloseProvider
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provider.aws (close)
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provisioner.remote-exec
2015/11/30 13:32:34 [DEBUG] vertex root.root: walking
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.OrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.AddOutputOrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.VertexTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.FlattenTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProxyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.DestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CreateBeforeDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneNoopTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
aws_security_group.softether
  aws_vpc.vpn
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [DEBUG] Starting graph walk: walkPlan
2015/11/30 13:32:34 [DEBUG] vertex root.var.availability_zone: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.availability_zone: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.remote-exec: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.remote-exec: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.chef: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.chef: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.file: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.file: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.var.prefix_ip: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.prefix_ip: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_vpc.vpn, got dep: var.prefix_ip
2015/11/30 13:32:34 [DEBUG] vertex root.var.instance_type: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.instance_type: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.instance_type
2015/11/30 13:32:34 [DEBUG] vertex root.var.envname: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.envname: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_iam_role.softether, got dep: var.envname
2015/11/30 13:32:34 [DEBUG] vertex aws_vpc.vpn, got dep: var.envname
2015/11/30 13:32:34 [DEBUG] vertex root.var.developers_ip: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.developers_ip: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.var.key_pair: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.key_pair: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.var.ami_id: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.ami_id: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.ami_id
2015/11/30 13:32:34 [DEBUG] vertex root.var.role_cidr_ip: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.role_cidr_ip: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.role_cidr_ip
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.availability_zone
2015/11/30 13:32:34 [DEBUG] vertex root.var.aws_region: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.aws_region: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex provider.aws, got dep: var.aws_region
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.local-exec: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.local-exec: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvider
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalConfigProvider
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provisioner.file
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Building AWS region structure
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Building AWS auth structure
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing IAM Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing DynamoDB connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing ELB connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing S3 connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing SQS connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing SNS connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing RDS Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Kinesis Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing AutoScaling connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing EC2 Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing ECS Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing EFS Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing ElasticSearch Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Route 53 connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Elasticache Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Lambda Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing CloudWatch SDK connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing CloudWatch Logs connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing OpsWorks Connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Directory Service connection
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing Glacier connection
2015/11/30 13:32:34 [DEBUG] vertex aws_iam_role.softether, got dep: provider.aws
2015/11/30 13:32:34 [DEBUG] vertex aws_vpc.vpn, got dep: provider.aws
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_role.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_role.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_vpc.vpn
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_iam_instance_profile.softether, got dep: aws_iam_role.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.role_cidr_ip
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.availability_zone
2015/11/30 13:32:34 [DEBUG] vertex aws_internet_gateway.gw, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group.developer_network, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group.softether, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: aws_vpc.vpn
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.developer_network
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.developer_network
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_subnet.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table.softether_server, got dep: aws_internet_gateway.gw
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: aws_security_group.developer_network
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: var.developers_ip
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_udp4500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp443_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp5555_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_udp500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_tcp992_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_security_group_rule.softether_udp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.softether
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.developer_network
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_iam_instance_profile.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table.softether_server
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table.softether_server
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_launch_configuration.softether
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table.softether_server: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp4500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp443_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp5555_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp500_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_tcp992_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_security_group_rule.softether_udp1194_ingress: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_launch_configuration.softether: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_route_table.softether_server
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_subnet.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_route_table.softether_server
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_route_table_association.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone1: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: walking
2015/11/30 13:32:34 [DEBUG] vertex root.aws_route_table_association.softether_server_zone2: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCheckPreventDestroy
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalIgnoreChanges
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalDiffTainted
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone2
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone1
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_launch_configuration.softether
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:34 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws (close): walking
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws (close): evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalCloseProvider
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provider.aws (close)
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provisioner.chef
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provisioner.remote-exec
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provisioner.local-exec
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: var.key_pair
2015/11/30 13:32:34 [DEBUG] vertex root.root: walking
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.OrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.AddOutputOrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.VertexTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.FlattenTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProxyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.DestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CreateBeforeDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneNoopTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
aws_security_group.softether
  aws_vpc.vpn
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ConfigTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.OrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.AddOutputOrphanTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.MissingProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  var.envname
aws_iam_role.softether
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.DisableProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.MissingProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.VertexTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.FlattenTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.ProxyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.TargetsTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.DestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CreateBeforeDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_instance_profile.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy)
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_instance_profile.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_iam_instance_profile.softether (destroy)
  aws_launch_configuration.softether (destroy)
  provider.aws
aws_iam_role.softether
  aws_iam_role.softether (destroy tainted)
  aws_iam_role.softether (destroy)
  provider.aws
  var.envname
aws_iam_role.softether (destroy tainted)
  aws_iam_instance_profile.softether (destroy tainted)
  provider.aws
aws_iam_role.softether (destroy)
  aws_iam_instance_profile.softether (destroy)
  provider.aws
aws_internet_gateway.gw
  aws_internet_gateway.gw (destroy tainted)
  aws_internet_gateway.gw (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  provider.aws
aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  provider.aws
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_launch_configuration.softether (destroy tainted)
  aws_launch_configuration.softether (destroy)
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_launch_configuration.softether (destroy tainted)
  provider.aws
aws_launch_configuration.softether (destroy)
  provider.aws
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_route_table.softether_server (destroy tainted)
  aws_route_table.softether_server (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table.softether_server (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table.softether_server (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy)
  aws_subnet.softether_server_zone2
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_security_group.developer_network
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.developer_network (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.developer_network (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group.developer_network (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group.softether
  aws_security_group.softether (destroy tainted)
  aws_security_group.softether (destroy)
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether (destroy tainted)
  aws_launch_configuration.softether (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group.softether (destroy)
  aws_launch_configuration.softether (destroy)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
  var.developers_ip
aws_security_group_rule.developer_network_tcp22_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.developer_network_tcp22_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp443_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_tcp992_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp1194_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp4500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy tainted)
  provider.aws
aws_security_group_rule.softether_udp500_ingress (destroy)
  provider.aws
aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone1 (destroy tainted)
  aws_route_table_association.softether_server_zone1 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone1 (destroy)
  aws_route_table_association.softether_server_zone1 (destroy)
  provider.aws
aws_subnet.softether_server_zone2
  aws_subnet.softether_server_zone2 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy)
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2 (destroy tainted)
  aws_route_table_association.softether_server_zone2 (destroy tainted)
  provider.aws
aws_subnet.softether_server_zone2 (destroy)
  aws_route_table_association.softether_server_zone2 (destroy)
  provider.aws
aws_vpc.vpn
  aws_vpc.vpn (destroy tainted)
  aws_vpc.vpn (destroy)
  provider.aws
  var.envname
  var.prefix_ip
aws_vpc.vpn (destroy tainted)
  aws_internet_gateway.gw (destroy tainted)
  aws_route_table.softether_server (destroy tainted)
  aws_security_group.developer_network (destroy tainted)
  aws_security_group.softether (destroy tainted)
  aws_subnet.softether_server_zone1 (destroy tainted)
  aws_subnet.softether_server_zone2 (destroy tainted)
  provider.aws
aws_vpc.vpn (destroy)
  aws_internet_gateway.gw (destroy)
  aws_route_table.softether_server (destroy)
  aws_security_group.developer_network (destroy)
  aws_security_group.softether (destroy)
  aws_subnet.softether_server_zone1 (destroy)
  aws_subnet.softether_server_zone2 (destroy)
  provider.aws
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneDestroyTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
  var.key_pair
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.key_pair
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.PruneNoopTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CloseProviderTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.CloseProvisionerTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
  provider.aws
  var.envname
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  provider.aws
  var.ami_id
  var.envname
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
  aws_vpc.vpn
  provider.aws
  var.envname
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
  provider.aws
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
  provider.aws
aws_security_group.developer_network
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group.softether
  aws_vpc.vpn
  provider.aws
  var.envname
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  provider.aws
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
  provider.aws
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
  provider.aws
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
  var.availability_zone
  var.envname
  var.prefix_ip
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_iam_instance_profile.softether
  aws_iam_role.softether
  aws_internet_gateway.gw
  aws_launch_configuration.softether
  aws_route_table.softether_server
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group.developer_network
  aws_security_group.softether
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  aws_subnet.softether_server_zone1
  aws_subnet.softether_server_zone2
  aws_vpc.vpn
  provider.aws
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [TRACE] Graph after step *terraform.TransitiveReductionTransformer:

aws_iam_instance_profile.softether
  aws_iam_role.softether
aws_iam_role.softether
  provider.aws
  var.envname
aws_internet_gateway.gw
  aws_vpc.vpn
aws_launch_configuration.softether
  aws_iam_instance_profile.softether
  aws_security_group.developer_network
  aws_security_group.softether
  var.ami_id
  var.instance_type
aws_route_table.softether_server
  aws_internet_gateway.gw
aws_route_table_association.softether_server_zone1
  aws_route_table.softether_server
  aws_subnet.softether_server_zone1
aws_route_table_association.softether_server_zone2
  aws_route_table.softether_server
  aws_subnet.softether_server_zone2
aws_security_group.developer_network
  aws_vpc.vpn
aws_security_group.softether
  aws_vpc.vpn
aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group.developer_network
  var.developers_ip
aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp443_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group.softether
aws_security_group_rule.softether_tcp992_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp1194_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp4500_ingress
  aws_security_group.softether
aws_security_group_rule.softether_udp500_ingress
  aws_security_group.softether
aws_subnet.softether_server_zone1
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_subnet.softether_server_zone2
  aws_vpc.vpn
  var.availability_zone
  var.role_cidr_ip
aws_vpc.vpn
  provider.aws
  var.envname
  var.prefix_ip
provider.aws
  var.aws_region
provider.aws (close)
  aws_launch_configuration.softether
  aws_route_table_association.softether_server_zone1
  aws_route_table_association.softether_server_zone2
  aws_security_group_rule.developer_network_tcp22_ingress
  aws_security_group_rule.softether_tcp1194_ingress
  aws_security_group_rule.softether_tcp443_ingress
  aws_security_group_rule.softether_tcp5555_ingress
  aws_security_group_rule.softether_tcp992_ingress
  aws_security_group_rule.softether_udp1194_ingress
  aws_security_group_rule.softether_udp4500_ingress
  aws_security_group_rule.softether_udp500_ingress
provisioner.chef
provisioner.file
provisioner.local-exec
provisioner.remote-exec
root
  provider.aws (close)
  provisioner.chef
  provisioner.file
  provisioner.local-exec
  provisioner.remote-exec
var.ami_id
var.availability_zone
var.aws_region
var.developers_ip
var.envname
var.instance_type
var.prefix_ip
var.role_cidr_ip
2015/11/30 13:32:34 [DEBUG] Starting graph walk: walkApply
2015/11/30 13:32:34 [DEBUG] vertex root.var.ami_id: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.ami_id: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.var.envname: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.envname: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_iam_role.softether, got dep: var.envname
2015/11/30 13:32:34 [DEBUG] vertex aws_vpc.vpn, got dep: var.envname
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.remote-exec: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.remote-exec: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.file: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.file: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.local-exec: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.local-exec: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.chef: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provisioner.chef: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvisioner
2015/11/30 13:32:34 [DEBUG] vertex root.var.availability_zone: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.availability_zone: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.var.developers_ip: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.developers_ip: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.var.instance_type: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.instance_type: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.instance_type
2015/11/30 13:32:34 [DEBUG] vertex aws_launch_configuration.softether, got dep: var.ami_id
2015/11/30 13:32:34 [DEBUG] vertex root.var.prefix_ip: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.prefix_ip: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.var.aws_region: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.aws_region: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex provider.aws, got dep: var.aws_region
2015/11/30 13:32:34 [DEBUG] vertex root.var.role_cidr_ip: walking
2015/11/30 13:32:34 [DEBUG] vertex root.var.role_cidr_ip: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws: walking
2015/11/30 13:32:34 [DEBUG] vertex root.provider.aws: evaluating
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInitProvider
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.role_cidr_ip
2015/11/30 13:32:34 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: var.availability_zone
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalBuildProviderConfig
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSetProviderConfig
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:34 [DEBUG] root: eval: *terraform.EvalConfigProvider
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Building AWS region structure
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Building AWS auth structure
2015/11/30 13:32:34 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:34 [INFO] Initializing IAM Connection
2015/11/30 13:32:34 [DEBUG] vertex root, got dep: provisioner.chef
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing DynamoDB connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing ELB connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing S3 connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing SQS connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing SNS connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing RDS Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing Kinesis Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing AutoScaling connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing EC2 Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing ECS Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing EFS Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing ElasticSearch Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing Route 53 connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing Elasticache Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing Lambda Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing CloudWatch SDK connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing CloudWatch Logs connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing OpsWorks Connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing Directory Service connection
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Initializing Glacier connection
2015/11/30 13:32:35 [DEBUG] vertex aws_iam_role.softether, got dep: provider.aws
2015/11/30 13:32:35 [DEBUG] vertex aws_vpc.vpn, got dep: provider.aws
2015/11/30 13:32:35 [DEBUG] vertex aws_vpc.vpn, got dep: var.prefix_ip
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_role.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:35 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_role.softether
2015/11/30 13:32:35 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_role.softether
2015/11/30 13:32:35 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:35 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:35 [DEBUG] vertex root.aws_vpc.vpn: expanding/walking dynamic subgraph
2015/11/30 13:32:35 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_vpc.vpn
2015/11/30 13:32:35 [TRACE] Graph after step *terraform.RootTransformer:

aws_vpc.vpn
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_role.softether: walking
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_role.softether: evaluating
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:35 [DEBUG] vertex root.aws_vpc.vpn: walking
2015/11/30 13:32:35 [DEBUG] vertex root.aws_vpc.vpn: evaluating
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:35 [DEBUG] apply: aws_iam_role.softether: executing Apply
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:35 [DEBUG] apply: aws_vpc.vpn: executing Apply
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [DEBUG] VPC create config: {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   CidrBlock: "192.168.0.0/16",
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   InstanceTenancy: "default"
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: }
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] VPC ID: vpc-aa8213cf
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [DEBUG] Waiting for VPC (vpc-aa8213cf) to become available
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [DEBUG] Waiting for state to become: available
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [TRACE] Waiting 100ms before next try
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2015/11/30 13:32:35 [DEBUG] vertex aws_iam_instance_profile.softether, got dep: aws_iam_role.softether
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_instance_profile.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:35 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:35 [TRACE] Graph after step *terraform.RootTransformer:

aws_iam_instance_profile.softether
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_instance_profile.softether: walking
2015/11/30 13:32:35 [DEBUG] vertex root.aws_iam_instance_profile.softether: evaluating
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:35 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:35 [DEBUG] apply: aws_iam_instance_profile.softether: executing Apply
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Modifying enable_dns_support vpc attribute for vpc-aa8213cf: {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   EnableDnsHostnames: {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:     Value: true
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   },
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   VpcId: "vpc-aa8213cf"
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: }
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [INFO] Modifying enable_dns_support vpc attribute for vpc-aa8213cf: {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   EnableDnsSupport: {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:     Value: true
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   },
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   VpcId: "vpc-aa8213cf"
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: }
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:35 [DEBUG] Creating tags: [{
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Key: "Name",
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Value: "vpn_prod"
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Key: "Role",
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Value: "vpc"
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Key: "Env",
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Value: "prod"
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Key: "Service",
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws:   Value: "vpn"
2015/11/30 13:32:35 [DEBUG] terraform-provider-aws: }] for vpc-aa8213cf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2015/11/30 13:32:36 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_iam_instance_profile.softether
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2015/11/30 13:32:36 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: aws_vpc.vpn
2015/11/30 13:32:36 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.role_cidr_ip
2015/11/30 13:32:36 [DEBUG] vertex aws_subnet.softether_server_zone1, got dep: var.availability_zone
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group.softether, got dep: aws_vpc.vpn
2015/11/30 13:32:36 [DEBUG] vertex aws_internet_gateway.gw, got dep: aws_vpc.vpn
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group.developer_network, got dep: aws_vpc.vpn
2015/11/30 13:32:36 [DEBUG] vertex aws_subnet.softether_server_zone2, got dep: aws_vpc.vpn
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone1: expanding/walking dynamic subgraph
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone1
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.softether: expanding/walking dynamic subgraph
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.softether
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:36 [DEBUG] vertex root.aws_internet_gateway.gw: expanding/walking dynamic subgraph
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_internet_gateway.gw
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.developer_network: expanding/walking dynamic subgraph
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group.developer_network
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group.developer_network
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone2: expanding/walking dynamic subgraph
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_subnet.softether_server_zone2
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone1: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone1: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.softether: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.softether: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:36 [DEBUG] vertex root.aws_internet_gateway.gw: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_internet_gateway.gw: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.developer_network: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group.developer_network: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone2: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_subnet.softether_server_zone2: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:36 [DEBUG] apply: aws_subnet.softether_server_zone1: executing Apply
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:36 [DEBUG] apply: aws_security_group.softether: executing Apply
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:36 [DEBUG] apply: aws_internet_gateway.gw: executing Apply
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:36 [DEBUG] apply: aws_security_group.developer_network: executing Apply
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:36 [DEBUG] apply: aws_subnet.softether_server_zone2: executing Apply
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Security Group create configuration: {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Description: "vpn prod softether",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   GroupName: "vpn_prod_softether",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   VpcId: "vpc-aa8213cf"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: }
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Creating internet gateway
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Security Group create configuration: {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Description: "vpn prod developer network",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   GroupName: "vpn_prod_developer_network",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   VpcId: "vpc-aa8213cf"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: }
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [INFO] Security Group ID: sg-19e8d67c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for Security Group (sg-19e8d67c) to exist
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for state to become: exists
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [TRACE] Waiting 100ms before next try
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [INFO] InternetGateway ID: igw-954299f0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Creating tags: [{
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Service",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "vpn"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Env",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "prod"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Role",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "internet_gateway"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Name",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "vpn_prod_gateway"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: }] for igw-954299f0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [INFO] Subnet ID: subnet-e7038ebe
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for subnet (subnet-e7038ebe) to become available
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for state to become: available
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [TRACE] Waiting 100ms before next try
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [INFO] Subnet ID: subnet-f60a7f81
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for subnet (subnet-f60a7f81) to become available
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for state to become: available
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [TRACE] Waiting 100ms before next try
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [INFO] Attaching Internet Gateway 'igw-954299f0' to VPC 'vpc-aa8213cf'
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [INFO] Security Group ID: sg-18e8d67d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for Security Group (sg-18e8d67d) to exist
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Waiting for state to become: exists
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [TRACE] Waiting 100ms before next try
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Revoking default egress rule for Security Group for sg-19e8d67c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Creating tags: [{
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Name",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "vpn_prod_softether_server_zone2"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Service",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "vpn"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Role",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "softether_server_zone2"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Env",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "prod"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: }] for subnet-e7038ebe
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Creating tags: [{
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Env",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "prod"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Service",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "vpn"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Name",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "vpn_prod_softether_server_zone1"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: } {
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Key: "Role",
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws:   Value: "softether_server_zone1"
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: }] for subnet-f60a7f81
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 2015/11/30 13:32:36 [DEBUG] Revoking default egress rule for Security Group for sg-18e8d67d
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: aws_security_group.developer_network
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.developer_network_tcp22_ingress, got dep: var.developers_ip
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCountFixZeroOneBoundary
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: expanding/walking dynamic subgraph
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.ResourceCountTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:36 [TRACE] Graph after step *terraform.RootTransformer:

aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: walking
2015/11/30 13:32:36 [DEBUG] vertex root.aws_security_group_rule.developer_network_tcp22_ingress: evaluating
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInstanceInfo
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalOpFilter
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalSequence
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: terraform.EvalNoop
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalInterpolate
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalCompareDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalGetProvider
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalReadState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApply
2015/11/30 13:32:36 [DEBUG] apply: aws_security_group_rule.developer_network_tcp22_ingress: executing Apply
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2015/11/30 13:32:36 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_subnet.softether_server_zone2
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalUpdateStateHook
2015/11/30 13:32:36 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_subnet.softether_server_zone1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: panic: interface conversion: interface is nil, not string
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 139 [running]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.expandIPPerm(0xc20844a840, 0xc20840ed80, 0xb)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_security_group_rule.go:431 +0xb18
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.resourceAwsSecurityGroupRuleCreate(0xc20844a840, 0x7a13a0, 0xc208094900, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_security_group_rule.go:93 +0x14e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/helper/schema.(*Resource).Apply(0xc20824bd80, 0xc2083ec570, 0xc2083b4a10, 0x7a13a0, 0xc208094900, 0x1, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/helper/schema/resource.go:145 +0x2c1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/helper/schema.(*Provider).Apply(0xc208226f60, 0xc208457240, 0xc2083ec570, 0xc2083b4a10, 0x7a2600, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/helper/schema/provider.go:162 +0x1da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.(*ResourceProviderServer).Apply(0xc2083eae40, 0xc2083c06c0, 0xc2083b4b60, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/resource_provider.go:323 +0x7f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: reflect.Value.call(0x9a50c0, 0xbe0480, 0x13, 0xc63110, 0x4, 0xc208423f28, 0x3, 0x3, 0x0, 0x0, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/reflect/value.go:419 +0x10e5
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: reflect.Value.Call(0x9a50c0, 0xbe0480, 0x13, 0xc208423f28, 0x3, 0x3, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/reflect/value.go:296 +0xbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*service).call(0xc208248340, 0xc208248300, 0xc2083d53b8, 0xc208376780, 0xc2083eb880, 0x7a25a0, 0xc2083c06c0, 0x16, 0x7a2600, 0xc2083b4b60, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:382 +0x1f7
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/rpc.(*Server).ServeCodec
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:476 +0x44a
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 1 [IO wait]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).Wait(0xc208011330, 0x72, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:84 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).WaitRead(0xc208011330, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:89 +0x43
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*netFD).accept(0xc2080112d0, 0x0, 0x1601d48, 0xc20808a988)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_unix.go:419 +0x40b
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*UnixListener).AcceptUnix(0xc20801f6a0, 0x36220, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/unixsock_posix.go:282 +0x56
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*UnixListener).Accept(0xc20801f6a0, 0x0, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/unixsock_posix.go:293 +0x4c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.(*Server).Accept(0xc20808a870, 0x1602850, 0xc20801f6a0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/server.go:33 +0x37
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/plugin.Serve(0xc20808a850)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/plugin/server.go:88 +0x7e8
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: main.main()
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/bins/provider-aws/main.go:11 +0x6d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 5 [syscall]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: os/signal.loop()
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/os/signal/signal_unix.go:21 +0x1f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by os/signal.init·1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/os/signal/signal_unix.go:27 +0x35
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 7 [chan receive]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/plugin.func·007()
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/plugin/server.go:79 +0x69
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by github.com/hashicorp/terraform/plugin.Serve
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/plugin/server.go:85 +0x7c4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 8 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/yamux.(*Stream).Read(0xc20806c640, 0xc208090000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/stream.go:125 +0x3ab
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc2080609c0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Read(0xc2080609c0, 0xc20808aa20, 0x1, 0x9, 0x2592, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:174 +0x26c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: io.ReadAtLeast(0x16039a8, 0xc2080609c0, 0xc20808aa20, 0x1, 0x9, 0x1, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/io/io.go:298 +0xf1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: io.ReadFull(0x16039a8, 0xc2080609c0, 0xc20808aa20, 0x1, 0x9, 0x2c, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/io/io.go:316 +0x6d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.decodeUintReader(0x16039a8, 0xc2080609c0, 0xc20808aa20, 0x9, 0x9, 0x0, 0x1, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decode.go:121 +0x99
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).recvMessage(0xc2080ba580, 0xc208001d40)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:76 +0x55
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).decodeTypeSequence(0xc2080ba580, 0xc20801fd00, 0x16)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:140 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).DecodeValue(0xc2080ba580, 0x7a8f00, 0xc20801fdc0, 0x16, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:208 +0x192
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).Decode(0xc2080ba580, 0x7a8f00, 0xc20801fdc0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:185 +0x297
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*gobServerCodec).ReadRequestHeader(0xc208088990, 0xc20801fdc0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:402 +0x5e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).readRequestHeader(0xc20803df80, 0x1603b08, 0xc208088990, 0x0, 0x0, 0xc20801fdc0, 0xc20808aa00, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:575 +0x97
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).readRequest(0xc20803df80, 0x1603b08, 0xc208088990, 0xc2080ba480, 0xc20801f840, 0x7cc660, 0x0, 0x0, 0x0, 0x0, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:542 +0xa2
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).ServeCodec(0xc20803df80, 0x1603b08, 0xc208088990)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:461 +0x6d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).ServeConn(0xc20803df80, 0x1603a30, 0xc20806c640)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:453 +0x208
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.(*Server).ServeConn(0xc20808a870, 0x1603948, 0xc2080440a0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/server.go:76 +0x530
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by github.com/hashicorp/terraform/rpc.(*Server).Accept
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/server.go:39 +0x173
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 9 [IO wait]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).Wait(0xc208011410, 0x72, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:84 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).WaitRead(0xc208011410, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:89 +0x43
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*netFD).Read(0xc2080113b0, 0xc20808c000, 0x1000, 0x1000, 0x0, 0x1601d48, 0xc2083b4818)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_unix.go:242 +0x40f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*conn).Read(0xc2080440a0, 0xc20808c000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/net.go:121 +0xdc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc208060540)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Read(0xc208060540, 0xc20808a9a0, 0xc, 0xc, 0xc2083b49e0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:174 +0x26c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: io.ReadAtLeast(0x16039a8, 0xc208060540, 0xc20808a9a0, 0xc, 0xc, 0xc, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/io/io.go:298 +0xf1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: io.ReadFull(0x16039a8, 0xc208060540, 0xc20808a9a0, 0xc, 0xc, 0xc, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/io/io.go:316 +0x6d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/yamux.(*Session).recvLoop(0xc2080ca0b0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:408 +0x10d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/yamux.(*Session).recv(0xc2080ca0b0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:396 +0x28
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by github.com/hashicorp/yamux.newSession
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:104 +0x499
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 10 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/yamux.(*Session).send(0xc2080ca0b0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:358 +0x554
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by github.com/hashicorp/yamux.newSession
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:105 +0x4b3
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 11 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/yamux.(*Session).keepalive(0xc2080ca0b0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:292 +0x230
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by github.com/hashicorp/yamux.newSession
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:107 +0x4de
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 13 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/yamux.(*Session).AcceptStream(0xc2080ca0b0, 0xc200000005, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/session.go:191 +0x1a8
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.(*muxBroker).Run(0xc20801f800)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/mux_broker.go:107 +0x37
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by github.com/hashicorp/terraform/rpc.(*Server).ServeConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/server.go:65 +0x388
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 54 [IO wait]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).Wait(0xc2080fac30, 0x72, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:84 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).WaitRead(0xc2080fac30, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:89 +0x43
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*netFD).Read(0xc2080fabd0, 0xc208217800, 0x800, 0x800, 0x0, 0x1601d48, 0xc20831e278)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_unix.go:242 +0x40f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*conn).Read(0xc2080442f0, 0xc208217800, 0x800, 0x800, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/net.go:121 +0xdc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*block).readFromUntil(0xc2083d2c60, 0x16049c0, 0xc2080442f0, 0x5, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:454 +0xe6
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).readRecord(0xc208034000, 0x17, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:539 +0x2da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).Read(0xc208034000, 0xc208091000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:904 +0x166
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.noteEOFReader.Read(0x160e628, 0xc208034000, 0xc20806a1b8, 0xc208091000, 0x1000, 0x1000, 0x9412a0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:1270 +0x6e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*noteEOFReader).Read(0xc2083d8e40, 0xc208091000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	<autogenerated>:125 +0xd4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc2083de840)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Peek(0xc2083de840, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:132 +0xf0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).readLoop(0xc20806a160)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:842 +0xa4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:660 +0xc9f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 55 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).writeLoop(0xc20806a160)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:945 +0x41d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:661 +0xcbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 119 [runnable]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).readLoop(0xc20822a4d0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:928 +0x9ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:660 +0xc9f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 125 [IO wait]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).Wait(0xc208469480, 0x72, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:84 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).WaitRead(0xc208469480, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:89 +0x43
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*netFD).Read(0xc208469420, 0xc2083e1000, 0x1000, 0x1000, 0x0, 0x1601d48, 0xc2083a6528)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_unix.go:242 +0x40f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*conn).Read(0xc2082f9048, 0xc2083e1000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/net.go:121 +0xdc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*block).readFromUntil(0xc2083d28d0, 0x16049c0, 0xc2082f9048, 0x5, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:454 +0xe6
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).readRecord(0xc208035b80, 0x17, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:539 +0x2da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).Read(0xc208035b80, 0xc20828e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:904 +0x166
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.noteEOFReader.Read(0x160e628, 0xc208035b80, 0xc20822a3c8, 0xc20828e000, 0x1000, 0x1000, 0x9412a0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:1270 +0x6e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*noteEOFReader).Read(0xc208346c20, 0xc20828e000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	<autogenerated>:125 +0xd4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc2081072c0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Peek(0xc2081072c0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:132 +0xf0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).readLoop(0xc20822a370)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:842 +0xa4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:660 +0xc9f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 51 [sleep]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.func·019()
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/dnsclient_unix.go:240 +0x5a
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net.loadConfig
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/dnsclient_unix.go:269 +0x20c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 109 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).roundTrip(0xc20822aa50, 0xc208312020, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:1082 +0x7ad
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Transport).RoundTrip(0xc208072090, 0xc20810c5b0, 0xc20830c810, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:235 +0x558
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.send(0xc20810c5b0, 0x1602028, 0xc208072090, 0x29, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:219 +0x4fc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Client).send(0x13df440, 0xc20810c5b0, 0x29, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:142 +0x15b
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Client).doFollowingRedirects(0x13df440, 0xc20810c5b0, 0xf82098, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:367 +0xb25
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Client).Do(0x13df440, 0xc20810c5b0, 0xecdedc864, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:177 +0x192
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/aws/corehandlers.func·003(0xc2080c7b00)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/aws/corehandlers/handlers.go:62 +0x62
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/aws/request.(*HandlerList).Run(0xc2080c7bd0, 0xc2080c7b00)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/aws/request/handlers.go:110 +0xa1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/aws/request.(*Request).Send(0xc2080c7b00, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/aws/request/request.go:220 +0x548
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/service/ec2.(*EC2).AttachInternetGateway(0xc20824c950, 0xc2082ce920, 0xc, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/service/ec2/api.go:289 +0x5c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.resourceAwsInternetGatewayAttach(0xc20844bec0, 0x7a13a0, 0xc208094900, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_internet_gateway.go:159 +0x67d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.resourceAwsInternetGatewayCreate(0xc20844bec0, 0x7a13a0, 0xc208094900, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_internet_gateway.go:54 +0x3f6
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/helper/schema.(*Resource).Apply(0xc20824ab80, 0xc2083ecb10, 0xc208386110, 0x7a13a0, 0xc208094900, 0x48e401, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/helper/schema/resource.go:145 +0x2c1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/helper/schema.(*Provider).Apply(0xc208226f60, 0xc208394440, 0xc2083ecb10, 0xc208386110, 0x7a2600, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/helper/schema/provider.go:162 +0x1da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.(*ResourceProviderServer).Apply(0xc2083eae40, 0xc2083a8b80, 0xc208386350, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/resource_provider.go:323 +0x7f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: reflect.Value.call(0x9a50c0, 0xbe0480, 0x13, 0xc63110, 0x4, 0xc208285f28, 0x3, 0x3, 0x0, 0x0, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/reflect/value.go:419 +0x10e5
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: reflect.Value.Call(0x9a50c0, 0xbe0480, 0x13, 0xc208285f28, 0x3, 0x3, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/reflect/value.go:296 +0xbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*service).call(0xc208248340, 0xc208248300, 0xc2083d53b8, 0xc208376780, 0xc2083eae60, 0x7a25a0, 0xc2083a8b80, 0x16, 0x7a2600, 0xc208386350, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:382 +0x1f7
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/rpc.(*Server).ServeCodec
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:476 +0x44a
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 94 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).writeLoop(0xc20822aa50)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:945 +0x41d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:661 +0xcbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 93 [IO wait]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).Wait(0xc2080fa4c0, 0x72, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:84 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).WaitRead(0xc2080fa4c0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:89 +0x43
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*netFD).Read(0xc2080fa460, 0xc2082d4800, 0x400, 0x400, 0x0, 0x1601d48, 0xc2080eae70)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_unix.go:242 +0x40f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*conn).Read(0xc20824d450, 0xc2082d4800, 0x400, 0x400, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/net.go:121 +0xdc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*block).readFromUntil(0xc2082da0c0, 0x16049c0, 0xc20824d450, 0x5, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:454 +0xe6
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).readRecord(0xc208035340, 0x17, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:539 +0x2da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).Read(0xc208035340, 0xc20822e000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:904 +0x166
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.noteEOFReader.Read(0x160e628, 0xc208035340, 0xc20822aaa8, 0xc20822e000, 0x1000, 0x1000, 0x9412a0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:1270 +0x6e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*noteEOFReader).Read(0xc20820fc20, 0xc20822e000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	<autogenerated>:125 +0xd4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc208060c00)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Peek(0xc208060c00, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:132 +0xf0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).readLoop(0xc20822aa50)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:842 +0xa4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:660 +0xc9f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 104 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).roundTrip(0xc20822b600, 0xc2083a7180, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:1082 +0x7ad
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Transport).RoundTrip(0xc208072090, 0xc2081172b0, 0xc2083d20f0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:235 +0x558
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.send(0xc2081172b0, 0x1602028, 0xc208072090, 0x29, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:219 +0x4fc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Client).send(0x13df440, 0xc2081172b0, 0x29, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:142 +0x15b
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Client).doFollowingRedirects(0x13df440, 0xc2081172b0, 0xf82098, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:367 +0xb25
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*Client).Do(0x13df440, 0xc2081172b0, 0xecdedc864, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/client.go:177 +0x192
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/aws/corehandlers.func·003(0xc2084478c0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/aws/corehandlers/handlers.go:62 +0x62
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/aws/request.(*HandlerList).Run(0xc208447990, 0xc2084478c0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/aws/request/handlers.go:110 +0xa1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/aws/request.(*Request).Send(0xc2084478c0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/aws/request/request.go:220 +0x548
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/aws/aws-sdk-go/service/ec2.(*EC2).DescribeSecurityGroups(0xc20824c950, 0xc20844b500, 0x1, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/aws/aws-sdk-go/service/ec2/api.go:3654 +0x5c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.func·113(0x0, 0x0, 0x0, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_security_group.go:549 +0x19d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.resourceAwsSecurityGroupRead(0xc20844b620, 0x7a13a0, 0xc208094900, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_security_group.go:252 +0xec
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.resourceAwsSecurityGroupUpdate(0xc20844b620, 0x7a13a0, 0xc208094900, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_security_group.go:308 +0x3d0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/builtin/providers/aws.resourceAwsSecurityGroupCreate(0xc20844b620, 0x7a13a0, 0xc208094900, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/builtin/providers/aws/resource_aws_security_group.go:246 +0x1416
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/helper/schema.(*Resource).Apply(0xc20824bd00, 0xc208227d70, 0xc20839ae50, 0x7a13a0, 0xc208094900, 0x1, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/helper/schema/resource.go:145 +0x2c1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/helper/schema.(*Provider).Apply(0xc208226f60, 0xc208137980, 0xc208227d70, 0xc20839ae50, 0x7a2600, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/helper/schema/provider.go:162 +0x1da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.(*ResourceProviderServer).Apply(0xc2083eae40, 0xc2083b15a0, 0xc20839aff0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/resource_provider.go:323 +0x7f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: reflect.Value.call(0x9a50c0, 0xbe0480, 0x13, 0xc63110, 0x4, 0xc208185f28, 0x3, 0x3, 0x0, 0x0, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/reflect/value.go:419 +0x10e5
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: reflect.Value.Call(0x9a50c0, 0xbe0480, 0x13, 0xc208185f28, 0x3, 0x3, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/reflect/value.go:296 +0xbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*service).call(0xc208248340, 0xc208248300, 0xc2083d53b8, 0xc208376780, 0xc2083b1640, 0x7a25a0, 0xc2083b15a0, 0x16, 0x7a2600, 0xc20839aff0, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:382 +0x1f7
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/rpc.(*Server).ServeCodec
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:476 +0x44a
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 81 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/yamux.(*Stream).Read(0xc20806c140, 0xc20821b000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/yamux/stream.go:125 +0x3ab
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc2082c2c00)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Read(0xc2082c2c00, 0xc2083d53f0, 0x1, 0x9, 0xc2080f5858, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:174 +0x26c
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: io.ReadAtLeast(0x16039a8, 0xc2082c2c00, 0xc2083d53f0, 0x1, 0x9, 0x1, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/io/io.go:298 +0xf1
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: io.ReadFull(0x16039a8, 0xc2082c2c00, 0xc2083d53f0, 0x1, 0x9, 0x1, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/io/io.go:316 +0x6d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.decodeUintReader(0x16039a8, 0xc2082c2c00, 0xc2083d53f0, 0x9, 0x9, 0x0, 0x1, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decode.go:121 +0x99
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).recvMessage(0xc208376c00, 0xc2082a0360)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:76 +0x55
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).decodeTypeSequence(0xc208376c00, 0xc2083a9700, 0x16)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:140 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).DecodeValue(0xc208376c00, 0x7a8f00, 0xc2083a9780, 0x16, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:208 +0x192
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: encoding/gob.(*Decoder).Decode(0xc208376c00, 0x7a8f00, 0xc2083a9780, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/encoding/gob/decoder.go:185 +0x297
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*gobServerCodec).ReadRequestHeader(0xc208227110, 0xc2083a9780, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:402 +0x5e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).readRequestHeader(0xc208248300, 0x1603b08, 0xc208227110, 0x0, 0x0, 0xc2083a9780, 0xc2083d5400, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:575 +0x97
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).readRequest(0xc208248300, 0x1603b08, 0xc208227110, 0xc208376780, 0xc2083eb880, 0x7a25a0, 0x0, 0x0, 0x0, 0x0, ...)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:542 +0xa2
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).ServeCodec(0xc208248300, 0x1603b08, 0xc208227110)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:461 +0x6d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/rpc.(*Server).ServeConn(0xc208248300, 0x1603a30, 0xc20806c140)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/rpc/server.go:453 +0x208
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.serve(0x1603a30, 0xc20806c140, 0xcf0570, 0x10, 0xbe03e0, 0xc2083eae40)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/server.go:146 +0x1f9
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: github.com/hashicorp/terraform/rpc.func·001()
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/server.go:102 +0x265
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by github.com/hashicorp/terraform/rpc.(*dispenseServer).ResourceProvider
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/gopath/src/github.com/hashicorp/terraform/rpc/server.go:103 +0x107
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 126 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).writeLoop(0xc20822a370)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:945 +0x41d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:661 +0xcbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 122 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).writeLoop(0xc20822a580)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:945 +0x41d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:661 +0xcbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 136 [IO wait]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).Wait(0xc20833a060, 0x72, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:84 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).WaitRead(0xc20833a060, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:89 +0x43
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*netFD).Read(0xc20833a000, 0xc208179c00, 0x400, 0x400, 0x0, 0x1601d48, 0xc2083a7178)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_unix.go:242 +0x40f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*conn).Read(0xc2082f9550, 0xc208179c00, 0x400, 0x400, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/net.go:121 +0xdc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*block).readFromUntil(0xc2082b0810, 0x16049c0, 0xc2082f9550, 0x5, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:454 +0xe6
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).readRecord(0xc208436000, 0x17, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:539 +0x2da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).Read(0xc208436000, 0xc208439000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:904 +0x166
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.noteEOFReader.Read(0x160e628, 0xc208436000, 0xc20822b658, 0xc208439000, 0x1000, 0x1000, 0x9412a0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:1270 +0x6e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*noteEOFReader).Read(0xc208303680, 0xc208439000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	<autogenerated>:125 +0xd4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc2084337a0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Peek(0xc2084337a0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:132 +0xf0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).readLoop(0xc20822b600)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:842 +0xa4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:660 +0xc9f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 121 [IO wait]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).Wait(0xc2084695d0, 0x72, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:84 +0x47
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*pollDesc).WaitRead(0xc2084695d0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_poll_runtime.go:89 +0x43
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*netFD).Read(0xc208469570, 0xc2083e0000, 0x1000, 0x1000, 0x0, 0x1601d48, 0xc20839acb8)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/fd_unix.go:242 +0x40f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net.(*conn).Read(0xc2082f90a8, 0xc2083e0000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/net.go:121 +0xdc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*block).readFromUntil(0xc2083d2c00, 0x16049c0, 0xc2082f90a8, 0x5, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:454 +0xe6
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).readRecord(0xc208224580, 0x17, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:539 +0x2da
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: crypto/tls.(*Conn).Read(0xc208224580, 0xc208160000, 0x1000, 0x1000, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/crypto/tls/conn.go:904 +0x166
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.noteEOFReader.Read(0x160e628, 0xc208224580, 0xc20822a5d8, 0xc208160000, 0x1000, 0x1000, 0x9412a0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:1270 +0x6e
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*noteEOFReader).Read(0xc208346860, 0xc208160000, 0x1000, 0x1000, 0xc208012000, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	<autogenerated>:125 +0xd4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).fill(0xc208106cc0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:97 +0x1ce
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: bufio.(*Reader).Peek(0xc208106cc0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/bufio/bufio.go:132 +0xf0
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).readLoop(0xc20822a580)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:842 +0xa4
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:660 +0xc9f
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 120 [runnable]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).writeLoop(0xc20822a4d0)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:945 +0x41d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:661 +0xcbc
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: goroutine 137 [select]:
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: net/http.(*persistConn).writeLoop(0xc20822b600)
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:945 +0x41d
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: created by net/http.(*Transport).dialConn
2015/11/30 13:32:36 [DEBUG] terraform-provider-aws: 	/opt/go/src/net/http/transport.go:661 +0xcbc
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalApplyPost, err: 1 error(s) occurred:

* aws_security_group.softether: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aws_security_group.softether: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalOpFilter, err: 1 error(s) occurred:

* aws_security_group.softether: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aws_security_group.softether: unexpected EOF
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalApplyPost, err: 1 error(s) occurred:

* aws_internet_gateway.gw: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aws_internet_gateway.gw: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalOpFilter, err: 1 error(s) occurred:

* aws_internet_gateway.gw: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aws_internet_gateway.gw: unexpected EOF
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyProvisioners
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteDiff
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalIf
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalWriteState
2015/11/30 13:32:36 [DEBUG] root: eval: *terraform.EvalApplyPost
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalApplyPost, err: 1 error(s) occurred:

* aws_security_group_rule.developer_network_tcp22_ingress: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aws_security_group_rule.developer_network_tcp22_ingress: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalOpFilter, err: 1 error(s) occurred:

* aws_security_group_rule.developer_network_tcp22_ingress: unexpected EOF
2015/11/30 13:32:36 [ERROR] root: eval: *terraform.EvalSequence, err: 1 error(s) occurred:

* aws_security_group_rule.developer_network_tcp22_ingress: unexpected EOF
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.softether_udp500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.softether_tcp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.softether_udp1194_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.softether_tcp992_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.softether_tcp5555_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.softether_udp4500_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_security_group_rule.softether_tcp443_ingress, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.softether
2015/11/30 13:32:36 [DEBUG] vertex aws_launch_configuration.softether, got dep: aws_security_group.developer_network
2015/11/30 13:32:36 [DEBUG] vertex aws_route_table.softether_server, got dep: aws_internet_gateway.gw
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp500_ingress
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_launch_configuration.softether
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp992_ingress
2015/11/30 13:32:36 [DEBUG] vertex aws_route_table_association.softether_server_zone2, got dep: aws_route_table.softether_server
2015/11/30 13:32:36 [DEBUG] vertex aws_route_table_association.softether_server_zone1, got dep: aws_route_table.softether_server
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone1
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp1194_ingress
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.developer_network_tcp22_ingress
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_route_table_association.softether_server_zone2
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp443_ingress
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp1194_ingress
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_tcp5555_ingress
2015/11/30 13:32:36 [DEBUG] vertex provider.aws (close), got dep: aws_security_group_rule.softether_udp4500_ingress
2015/11/30 13:32:36 [DEBUG] vertex root, got dep: provider.aws (close)
2015/11/30 13:32:36 [DEBUG] vertex root, got dep: provisioner.remote-exec
2015/11/30 13:32:36 [DEBUG] vertex root, got dep: provisioner.file
2015/11/30 13:32:36 [DEBUG] vertex root, got dep: provisioner.local-exec
2015/11/30 13:32:36 [DEBUG] /usr/local/bin/terraform-provider-aws: plugin process exited
2015/11/30 13:32:36 [DEBUG] waiting for all plugin processes to complete...
2015/11/30 13:32:36 [DEBUG] /usr/local/bin/terraform-provisioner-local-exec: plugin process exited
2015/11/30 13:32:36 [DEBUG] /usr/local/bin/terraform-provisioner-chef: plugin process exited
2015/11/30 13:32:36 [DEBUG] /usr/local/bin/terraform-provisioner-file: plugin process exited
2015/11/30 13:32:36 [DEBUG] /usr/local/bin/terraform-provisioner-remote-exec: plugin process exited
